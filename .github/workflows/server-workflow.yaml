name: Server Workflow

on:
  push:
    paths:
      - "server/**/*"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: build deploy image
        run: docker build --target deploy -t gto server

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "3.1.201"
      - name: build and run tests
        run: yarn dtest

  integration_tests:
    runs-on: ubuntu-latest
    name: Integration tests
    steps:
      - uses: actions/checkout@v2
      - name: Install deps
        run: yarn install
      - name: Boot up Server
        run: docker-compose -f ./integration/js/docker-compose.yaml up -d
      - name: Run tests
        run: yarn workspace @gtoru/js-integration test

  push_image:
    runs-on: ubuntu-latest
    name: Publish Docker image
    needs: [build, unit-tests, integration_tests]
    steps:
      - uses: actions/checkout@v2
        if: ${{ github.ref }} == 'master'
      - name: Docker Login
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login docker.pkg.github.com -u gtoru --password-stdin
      - name: Build Historical Image
        run: docker build -t docker.pkg.github.com/gtoru/server/server:$GITHUB_RUN_NUMBER --target deploy server/
      - name: Publish Historical Image
        run: docker push docker.pkg.github.com/gtoru/server/server:$GITHUB_RUN_NUMBER
      - name: Build Latest Image
        run: docker build -t docker.pkg.github.com/gtoru/server/server --target deploy server/
      - name: Publish Latest Image
        run: docker push docker.pkg.github.com/gtoru/server/server

  update_job:
    runs-on: ubuntu-latest
    name: Perform DEV cluster update
    needs: [push_image]
    steps:
      - uses: actions/checkout@v2
      - name: Configure k8s
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}
        run: 'mkdir ~/.kube && echo "$KUBECONFIG" > ~/.kube/config'
      - name: Set gto-dev namespace for kubectl
        run: kubectl config set-context --current --namespace=gto-dev
      - name: Add Github-token as secret
        run: kubectl get secrets regcred || kubectl create secret docker-registry regcred --namespace=gto-dev --docker-server=docker.pkg.github.com --docker-username=gtoru --docker-password=${{ secrets.GITHUB_TOKEN }}
      - name: Rollout update
        run: kubectl rollout restart deployment/gto-back-deployment
